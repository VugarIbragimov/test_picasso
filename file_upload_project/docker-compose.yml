# version: '3'
# services:
#   redis:
#     image: redis
#     container_name: my-redis-container
#     ports:
#       - "6379:6379"
#   backend:
#     build: .//
#     container_name: my-django-container
#     ports:
#       - "8000:8000"

#     depends_on:
#       - redis


# docker-compose.yml

# version: '3'

# services:
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - redis
#   redis:
#     image: "redis:alpine"

# docker-compose.yml

# version: '3'

# services:
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - redis
#   redis:
#     image: "redis:alpine"
#     ports:
#       - "6379:6379"  # Порт для Redis

# docker-compose.yml

# version: '3'

# services:
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - redis
#     networks:
#       - mynetwork  # добавьте эту сеть

#   redis:
#     image: "redis:alpine"
#     ports:
#       - "6379:6379"  # Порт для Redis
#     networks:
#       - mynetwork  # добавьте эту сеть

# networks:
#   mynetwork:

# docker-compose.yml

version: '3'

services:
  web:
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - mynetwork

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  celery:
    build: .
    command: python -m celery -A file_upload_project worker -l info
    volumes:
      - .:/app
    depends_on:
      - web
    networks:
      - mynetwork
networks:
  mynetwork: